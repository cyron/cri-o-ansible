---
- hosts: all
  become: true
  environment:
    http_proxy: http://proxy.rdh.ecl.ntt.co.jp:20066
    https_proxy: http://proxy.rdh.ecl.ntt.co.jp:20066
    no_proxy: 127.0.0.1,localhost,master,node1,node2,10.0.2.11,10.0.2.12,10.0.2.13,10.0.0.0/8
  tasks:
    - include: install/os_updates.yml
    - include: install/kubernetes.yml
    - include: install/golang.yml

    - name: Make sure we have all required packages on RHEL/CentOS
      yum:
        name: "{{ item }}"
        state: latest
      with_items:
        - btrfs-progs-devel
        - container-selinux
        - device-mapper-devel
        - gcc
        - git
        - glib2-devel
        - glibc-devel
        - glibc-static
        - go-md2man
        - golang
        - gpgme-devel
        - json-glib-devel
        - libassuan-devel
        - libgpg-error-devel
        - libseccomp-devel
        - make
        - pkgconfig
        - skopeo-containers
        - tar
        - wget
      when: ansible_distribution in ['RedHat', 'CentOS']

    - name: Make sure we have all required packages on RHEL
      yum:
        name: "go-md2man"
      when: ansible_distribution == 'RedHat'

    - name: Make sure we have all required packages on CentOS
      yum:
        name: "golang-github-cpuguy83-go-md2man"
      when: ansible_distribution == 'CentOS'

    - name: Make directories
      file:
        path: "{{ item }}"
        state: directory
      with_items:
           - /usr/local/go
           - /var/lib/etcd
           - /etc/crio/net.d
           - /usr/share/containers/oci/hooks.d
           - /etc/containers

    - name: clone runc
      git:
        repo: https://github.com/opencontainers/runc
        dest: /root/src/github.com/opencontainers/runc

    - name: clone CRI-O
      git:
        repo: https://github.com/kubernetes-incubator/cri-o
        dest: /root/src/github.com/kubernetes-incubator/cri-o
        version: release-1.16

    - name: clone CNI
      git:
        repo: https://github.com/containernetworking/plugins
        dest: /root/src/github.com/containernetworking/plugins

    - name: build runc
      shell: |
              cd /root/src/github.com/opencontainers/runc && \
              export GOPATH=/root && \
              make BUILDTAGS="seccomp selinux" && \
              make install

    - name: link runc
      file: src=/usr/local/sbin/runc dest=/usr/bin/runc state=link force=yes

    - name: build cri-o
      shell: |
              export GOPATH=/root && \
              export GOBIN=/usr/local/go/bin && \
              export PATH=/usr/local/go/bin:$PATH && \
              cd /root/src/github.com/kubernetes-incubator/cri-o && \
              make && \
              make install && \
              make install.systemd && \
              make install.config

    - name: clone conmon dependency
      git:
        repo: http://github.com/containers/conmon
        dest: /root/src/github.com/conmon
  
    - name: build and install conmon
      shell: |
              cd /root/src/github.com/conmon && \
              make && \
              make install

    - name: build CNI stuff
      shell: |
              cd /root/src/github.com/containernetworking/plugins && \
              ./build_linux.sh && \
              mkdir -p /opt/cni/bin && \
              cp bin/* /opt/cni/bin/

    - name: run CRI-O with systemd cgroup manager
      replace:
        regexp: 'cgroupfs'
        replace: 'systemd'
        name: /etc/crio/crio.conf
        backup: yes
      when: ansible_distribution in ['Fedora', 'RedHat', 'CentOS']
      
    - name: change cni net.d
      replace:
        regexp: 'network_dir = "\/etc\/cni\/net\.d/"'
        replace: 'network_dir = "/etc/crio/net.d/"'
        name: /etc/crio/crio.conf
        backup: yes
        
    - name: download default network
      get_url: 
        url: https://raw.githubusercontent.com/cri-o/cri-o/master/contrib/cni/10-crio-bridge.conf
        dest: /etc/crio/net.d/10-crio-bridge.conf
        force: yes

    - name: run with overlay2
      replace:
        regexp: '^#storage_driver = "overlay"'
        replace: 'storage_driver = "overlay2"'
        name: /etc/crio/crio.conf
        backup: yes

    - name: change cgroup_manager to cgroupfs
      replace:
        regexp: '^cgroup_manager = "systemd"'
        replace: 'cgroup_manager = "cgroupfs"'
        name: /etc/crio/crio.conf
        backup: yes
      when: ansible_distribution not in ['Fedora', 'RedHat', 'CentOS']

    - name: add overlay2 storage opts on RHEL/CentOS
      lineinfile:
        dest: /etc/crio/crio.conf
        line: 'storage_option = [ "overlay2.override_kernel_check=1" ]'
        insertafter: 'storage_option = \['
        regexp: 'overlay2\.override_kernel_check=1'
        state: present
      when: ansible_distribution in ['RedHat', 'CentOS']
      
    - name: crio proxy
      copy:
        content: |
              HTTP_PROXY=http://proxy.rdh.ecl.ntt.co.jp:20066
              HTTPS_PROXY=http://proxy.rdh.ecl.ntt.co.jp:20066
        dest: /etc/sysconfig/crio
        force: yes

    - name: enable and start CRI-O
      systemd:
        name: crio
        state: started
        enabled: yes
        daemon_reload: yes

    - name: modprobe br_netfilter
      command: "modprobe br_netfilter"
      ignore_errors: true
      
    - name: modprobe br_netfilter 2
      lineinfile:
        line: 'br_netfilter'
        dest: /etc/modules-load.d/br_netfilter.conf
        insertafter: 'EOF'
        create: 'yes'
      ignore_errors: true
      
    - name: modprobe overlay
      command: "modprobe overlay"
      ignore_errors: true
      
    - name: modprobe overlay 2
      lineinfile:
        line: 'overlay'
        dest: /etc/modules-load.d/overlay.conf
        insertafter: 'EOF'
        create: 'yes'
      ignore_errors: true

    - name: tune sysctl
      lineinfile:
        dest: /etc/sysctl.conf
        insertafter: 'EOF'
        line: '{{ item }}'
      with_items:
        - 'net/bridge/bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'
      ignore_errors: true

    - name: reload sysctl
      command: "sysctl -p"
      ignore_errors: true

    - name: kubelet_extra_args copied to /etc/sysconfig/kubelet
      replace:
        regexp: 'KUBELET_EXTRA_ARGS='
        replace: "KUBELET_EXTRA_ARGS=--feature-gates=\"AllAlpha=false,RunAsGroup=true\" --container-runtime=remote --cgroup-driver=systemd --container-runtime-endpoint='unix:///var/run/crio/crio.sock' --runtime-request-timeout=5m"
        name: /etc/sysconfig/kubelet
        backup: yes
        
    - name: enable kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes
        daemon_reload: yes

    - name: flush iptables
      command: "iptables -F"

    - name: Permanently disable selinux
      lineinfile:
        dest: /etc/selinux/config
        line: 'SELINUX=permissive'
        regexp: '^SELINUX='
      when: ansible_distribution in ['Fedora', 'RedHat', 'CentOS']

    - name: disable selinux
      command: "setenforce 0"
      when: ansible_distribution in ['Fedora', 'RedHat', 'CentOS']
